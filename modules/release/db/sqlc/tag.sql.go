// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: tag.sql

package db

import (
	"context"
)

const listtags = `-- name: Listtags :many
SELECT id, tag, created_at FROM tags
ORDER BY tag
LIMIT $1
OFFSET $2
`

type ListtagsParams struct {
	Limit  int32 `json:"limit"`
	Offset int32 `json:"offset"`
}

func (q *Queries) Listtags(ctx context.Context, arg ListtagsParams) ([]Tag, error) {
	rows, err := q.db.QueryContext(ctx, listtags, arg.Limit, arg.Offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Tag{}
	for rows.Next() {
		var i Tag
		if err := rows.Scan(&i.ID, &i.Tag, &i.CreatedAt); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
